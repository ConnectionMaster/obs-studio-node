trigger:
  branches:
    include:
      - staging
  tags:
    include:
      - '*'

variables:
  RuntimeURL: https://atom.io/download/atom-shell
  RuntimeName: iojs
  ElectronVersion: 6.0.3
  SLBuildDirectory: streamlabs-build
  SLGenerator: Visual Studio 15 2017 Win64
  SLDistributeDirectory: distribute
  SLFullDistributePath: $(SLBuildDirectory)\$(SLDistributeDirectory)
  BuildArtifact: obs-studio-node-us-$(Build.BuildId)-$(RuntimeName)-v$(ElectronVersion)
  LibOBSVersion: 24.17.37

jobs:
- job: 'MacOSX'
  pool:
    vmImage: 'macos-10.13'
  workspace:
    clean: all
  strategy:
    matrix:
      Release:
        BuildConfig: RelWithDebInfo
        ReleaseName: release
      Debug:
        BuildConfig: Debug
        ReleaseName: debug
  steps:
  - powershell: Write-Host "##vso[task.setvariable variable=tagartifact]obs-studio-node-$((git describe --tags --abbrev=0) | Out-String)"
    displayName: 'Get current tag'

  - script: './ci/install-dependencies-osx.sh'
    displayName: 'Install dependencies'

  - script: 'git submodule update --init --recursive'
    displayName: 'Update submodules'

  - script: ./ci/configure-osn-osx.sh
    displayName: 'Configure obs-studio-node'

  - script: ./ci/build-osn-osx.sh
    displayName: 'Build obs-studio-node'

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: $(SLFullDistributePath)\obs-studio-node
      includeRootFolder: true
      archiveType: tar
      tarCompression: gz
      archiveFile: '$(SLFullDistributePath)\$(BuildArtifact)-$(ReleaseName).tar.gz'
    displayName: 'Generate build artifact'

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: $(SLFullDistributePath)\$(BuildArtifact)-$(ReleaseName).tar.gz
      artifactName: $(BuildArtifact).tar.gz
    displayName: 'Publish build artifact'

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: $(SLFullDistributePath)\obs-studio-node
      includeRootFolder: true
      archiveType: tar
      tarCompression: gz
      archiveFile: '$(tagartifact)-$(RuntimeName)-v$(ElectronVersion)-$(ReleaseName).tar.gz'
    displayName: 'Generate tag artifact'
    condition: and(succeeded(), contains(variables['Build.SourceBranch'], 'tags'))

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: $(Build.SourcesDirectory)\$(tagartifact)-$(RuntimeName)-v$(ElectronVersion)-$(ReleaseName).tar.gz
      artifactName: $(tagartifact)-$(RuntimeName)-v$(ElectronVersion)-$(ReleaseName).tar.gz
    displayName: 'Publish tag artifact'
    condition: and(succeeded(), contains(variables['Build.SourceBranch'], 'tags'))

  - task: S3Upload@1
    inputs:
      awsCredentials: 'Streamlabs AWS'
      regionName: 'us-west-2'
      bucketName: 'obsstudionodes3.streamlabs.com'
      globExpressions: '$(tagartifact)-$(RuntimeName)-v$(ElectronVersion)-$(ReleaseName).tar.gz'
      filesAcl: 'public-read'
    displayName: 'Upload tag artifact to S3'
    condition: and(succeeded(), contains(variables['Build.SourceBranch'], 'tags'))