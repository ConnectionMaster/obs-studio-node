environment:
  matrix:
    - RuntimeURL: https://nodejs.org/download/release
      RuntimeName: node
      RuntimeVersion: v9.4.0

    - RuntimeURL: https://atom.io/download/atom-shell
      RuntimeName: iojs
      RuntimeVersion: v3.0.0-beta.2

    - RuntimeURL: https://atom.io/download/atom-shell
      RuntimeName: iojs
      RuntimeVersion: v2.0.4

  NodeVersion: 9
  SLBuildDirectory: streamlabs-build
  SLGenerator: Visual Studio 14 2015 Win64
  SLDistributeDirectory: distribute
  SLFullDistributePath: $(SLBuildDirectory)\$(SLDistributeDirectory)
  SLArch: x64
  SignTool: C:\Program Files (x86)\Windows Kits\10\bin\x64\signtool.exe
  StreamlabsPfxSecret:
    secure: iZlMSWnmH5FQDpa+/0SgXIyvCobkElj2y5lu94Uo8VnTWHTeTC1/bpVkzsLreENocomvDB5ywsa3+QdathRp8A==
  StreamlabsSecret:
    secure: hr+VpykbGiCI5I0ltiqH667wh/YQx2Fi5SBLfkOWHSg=
  UnsignedArtifact: $(RuntimeName)-$(RuntimeVersion)-unsigned
  SignedArtifact: $(RuntimeName)-$(RuntimeVersion)-signed
  OBSVersion: 21.1.2

install:
  - ps: Install-Product node $env:NodeVersion
  - yarn install

build_script:
  - cmake -H. -B"%SLBuildDirectory%" -G"%SLGenerator%"  -DCMAKE_INSTALL_PREFIX="%SLFullDistributePath%\obs-studio-node" -DNODEJS_NAME=%RuntimeName% -DNODEJS_URL=%RuntimeURL% -DNODEJS_VERSION=%RuntimeVersion%
  - cmake --build %SLBuildDirectory% --target install --config RelWithDebInfo
  - tar cvaf "%UnsignedArtifact%.tar.gz" -C "%SLFullDistributePath%" "obs-studio-node"

before_deploy:
  - nuget install secure-file -ExcludeVersion

  - ps: |
      & secure-file\tools\secure-file -decrypt CI\streamlabsp12.pfx.enc -secret "$env:StreamlabsPfxSecret" -out CI\streamlabsp12.pfx
      if ($LASTEXITCODE -ne 0) {
        exit 1
      }

  - ps: |
      Get-ChildItem -Recurse  "$env:SLFullDistributePath" -Include "*.dll","*.node","*.exe" |
      Foreach-Object {
        & "$env:SignTool" sign /p "$env:StreamlabsSecret" /f CI\streamlabsp12.pfx $_.FullName

        if ($LASTEXITCODE -ne 0) {
          exit 1
        }
      }

  - if not exist "OBS-Studio-%OBSVersion%-Small.zip" appveyor DownloadFile "https://github.com/obsproject/obs-studio/releases/download/%OBSVersion%/OBS-Studio-%OBSVersion%-Small.zip"
  - 7z x "OBS-Studio-%OBSVersion%-Small.zip" -oobs-studio-jp9000
  - robocopy "obs-studio-jp9000\data\obs-plugins\win-capture" "%SLFullDistributePath%\obs-studio-node\libobs\data\obs-plugins\win-capture" & exit 0
  - tar cvaf "%SignedArtifact%.tar.gz" -C "%SLFullDistributePath%" "obs-studio-node"
  - ps: Push-AppveyorArtifact "$env:SignedArtifact.tar.gz"

deploy:
  - provider: GitHub
    artifact: $(SignedArtifact).tar.gz
    auth_token:
      secure: nP2TonQxdUNyL65bmBKVPi0/jYX3h6mPCdFgJs1WeD+kNhgoUJ4mqxZ2FWkjpE0N
    draft: false
    prerelease: false
    force_update: true
    on:
      appveyor_repo_tag: true

artifacts:
  - path: $(UnsignedArtifact).tar.gz
    name: Unsigned Aritfact

test: off